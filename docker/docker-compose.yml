version: '3.8'

services:
  exporter:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ../exporter:/usr/src/app/exporter
    working_dir: /usr/src/app
    command: python3 -u start_exporter.py
    networks:
      - systel-subnet
    profiles:
      - single-exporter

  node-exporter:
    image: prom/node-exporter:v1.7.0
    ports:
      - "9100:9100"
    networks:
      - systel-subnet
    profiles:
      - replicas
      - single-exporter

  grafana:
    image: grafana/grafana:10.3.3
    ports:
      - "3000:3000"
    volumes:
      - ../grafana/conf:/etc/grafana/conf
      - ../grafana/conf/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ../grafana/conf/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ../scripts/init-grafana.sh:/etc/grafana/init-grafana.sh
      - grafana-data:/var/lib/grafana
    networks:
      - systel-subnet
    profiles:
      - replicas
      - single-exporter

  prometheus:
    image: prom/prometheus:v2.45.3
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../prometheus/alerts.rules.yml:/etc/prometheus/alerts.rules.yml
      - ../prometheus/sd:/etc/prometheus/sd
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    networks:
      - systel-subnet
    profiles:
      - replicas
      - single-exporter

  grafana-sync-script:
    image: python:3.9
    environment:
      GRAFANA_SYNC_API: ${GRAFANA_SYNC_API}
      GRAFANA_LOCAL_API_URI: "http://grafana:3000/api"
    volumes:
      - ../grafana/conf/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ../scripts/export_dashboards.py:/usr/src/app/export_dashboards.py
    command: /bin/sh -c "pip install requests python-dotenv && python /usr/src/app/export_dashboards.py"
    depends_on:
      - grafana
    networks:
      - systel-subnet
    profiles:
      - replicas
      - single-exporter

  alertmanager:
    user: "0"
    image: prom/alertmanager:v0.27.0
    restart: unless-stopped
    ports:
      - "9093:9093"
    expose:
    - "9093"
    volumes:
      - ../alertmanager:/etc/alertmanager/config
      - ../alertmanager/alertmanager.template.yml:/etc/alertmanager/config/alertmanager.template.yml
      - ..alertmanager-data:/etc/alertmanager/data
      - ../scripts/start_alertmanager.sh:/etc/alertmanager/scripts/start_alertmanager.sh
    environment:
      ALERTMANAGER_APP_PWD: ${ALERTMANAGER_APP_PWD}
    entrypoint: ["/bin/sh", "-c"]
    command: ["chmod +x /etc/alertmanager/scripts/start_alertmanager.sh && /etc/alertmanager/scripts/start_alertmanager.sh"]
    depends_on:
      - prometheus
    networks:
      - systel-subnet
    profiles:
      - replicas
      - single-exporter

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:

networks:
  systel-subnet: